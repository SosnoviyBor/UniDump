; -----------------------------------------
; ЛР №6
; -----------------------------------------
; Архітектура комп'ютера
; Завдання: 
; ВУЗ: КНУУ "КПІ"
; Факультет: ФІОТ
; Курс: 1
; Група: ІТ-03
; -----------------------------------------
; Автори:	Букрєєв М.С.
;			Король К.В.
;			Федяй Б.В.
; Дата: 26/04/2021
; -----------------------------------------

;					І. Заголовок програми
IDEAL
MODEL small
STACK 256
;					ІІ. Макроси
MACRO M_init		; Макрос для ініціалізації. Його початок
	mov ax, @data	; @data ідентифікатор, що створюються директивою MODEL
	mov ds, ax		; Завантаження початку сегменту даних в регістр DS
	mov es, ax		; Завантаження початку сегменту даних в регістр ES
	ENDM M_init		; Кінець макросу
;					ІІІ. Початок сегменту даних
DATASEG
message db 10, 13, "Team 1: Bukreev, Korol, Fedyay", 10, 13, "$"
custom_int_code dw 33h	; 33h = 51d
old_IP dw 0
old_CS dw 0
exCode db 0
;					IV. Початок сегменту коду
CODESEG
Start:
	M_init	; Виклик макросу для ініціалізації
	; ---------- Отримання адреси переривання, що будемо замінювати ----------
	mov di, [custom_int_code]

	call GetIntVals

	mov [old_IP], bx
	mov [old_CS], es
	; ------------- Заміна переривання на потрібну нам процедуру -------------
	mov di, [custom_int_code]
	mov dx, offset Printer
	mov ax, seg Printer
	mov es, ax

	call SetIntVals
	; ----------------------- Виклик цього преривання ------------------------
	int 33h
	; ------------- Повернення початкового функціоналу прериванню ------------
	mov di, [custom_int_code]
	mov dx, [old_IP]
	mov ax, [old_CS]
	mov es, ax

	call SetIntVals
	; ------------------------------------------------------------------------
	mov ah, 4ch			; Завантаження числа 01h до регістру AH 
	mov al, [exCode]	; Завантаження значення exCode до регістру AL
	int 21h				; Виклик преривання 21h (AH = 4ch, AL = код виходу - команда виходу із програми)
	
	; ================================ Процедури ================================
	; ----------------------------------------------------------------------------------
	; Призначення: Вивід строки тексту у консоль
	; Вхід:
	;	message <- Змінна, що у кінці обов'язково має символ-термінатор
	; Вихід: ---
	; ----------------------------------------------------------------------------------
	PROC Printer
		push ax
		push dx

		; Очищення консолі
		mov ax, 03h
		int 10h
		; Вивід рядку на екран
		mov dx, offset message
		mov ah, 09h
		int 21h

		pop dx
		pop ax
		iret
		ENDP

	; ----------------------------------------------------------------------------------
	; Призначення: Отримання логічної адреси процедури обробки переривання за номером вектора переривання
	; Вхід:
	; 	DI <- номер вектора переривання
	; Вихід:
	; 	BX <- Ефективна адреса (IP) обробки переривання
	; 	ES <- Сегмент процедури (CS) обробки переривання
	; ----------------------------------------------------------------------------------
	PROC GetIntVals
		push ax
		push di

		shl	di, 2 				; DI <- DI * 4
		mov	bx, [di] 			; В BX записуємо зміщення процедруи обробника, що знаходиться у векторі переривання
		mov	ax, [di + 2] 		; В AX записуємо сегмент процедруи обробника, що знаходиться у векторі переривання
		mov	es, ax				; ES <- AX

		pop	di
		pop	ax
		ret
		ENDP

	; ----------------------------------------------------------------------------------
	; Призначення: Установка на номер вектора нової функції обробника. Зміна функціоналу прерівання за логічною адресою
	; Вхід:
	; 	DI - номер переривання де буде нова процедура
	; 	DX - ефективна адреса нового обробника (IP)
	; 	ES - адреса сегмента нового обробника (CS)
	; Вихід: ---
	; ----------------------------------------------------------------------------------
	PROC SetIntVals
		cli 					; Заборона апаратних переривань
		push ax
		push di
		push ds

		mov	ax, 0 				; AX <- 0
		mov ds, ax				; DS <- 0. Інакше ми значення будемо встановлювати бог знає куди
		shl	di, 2 				; DI <- DI * 4
		mov	[di], dx 			; Перезаписуємо зміщення (IP) у векторі переривання 
		mov	[di + 2], es 		; Перезаписуємо сегмент (CS) у векторі переривання 

		pop	ds
		pop	di
		pop	ax
		sti 					; Дозвіл апаратних переривань
		ret
		ENDP
	
	end Start